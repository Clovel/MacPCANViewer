# Project build files ---------------------------
Debug/
build/
build_x86/
build_arm/
Testing/
image/
output/

# CMake related files ---------------------------
Makefile
CMakeCache.txt
.project
.settings
CMakeCache.txt
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
CMakeFiles/
CMakeScripts/

# VS Code related files -------------------------
.vscode/

# Doxygen related files -------------------------
html/
latex/
man/

# MS Office related files -----------------------
~*

# Unix related files ----------------------------
*.swp

# Uncrustify related files ----------------------
*.unc-backup*
#*.unc-backup.md5*
src_file_list*.txt

# pkg-config generated files --------------------
*.pc

# Prerequisites ---------------------------------
*.d

# Compiled Object files -------------------------
*.slo
*.lo
*.o
*.obj

# Precompiled Headers ---------------------------
*.gch
*.pch

# Compiled Dynamic libraries --------------------
*.so
*.dylib
*.dll

# Fortran module files --------------------------
*.mod
*.smod

# Compiled Static libraries ---------------------
*.lai
*.la
*.a
*.lib

# Executables -----------------------------------
*.exe
*.out
*.app

# OS Related files ------------------------------
.DS_Store

# Xcode related files ---------------------------
## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcworkspace/contents.xcworkspacedata
/*.gcno

# Swift & ObjC/C++ related files ----------------

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts
Carthage/Build

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode
iOSInjectionProject/

# Misc files ------------------------------------
examples/test
